HeadNode:
  LocalStorage:
    RootVolume:
      Size: 256
      Encrypted: false
      VolumeType: gp3
      Iops: 10000
      Throughput: 1000
  CustomActions:
    OnNodeConfigured:
      Args:
        - 00.install.custom.packages.headnode.sh
        - 02.activate.passwordless.AD.headnode.sh
        - 03.configure.slurm.acct.headnode.sh
        - 04.configure.slurm.AllOrNothing.headnode.sh
        - 07.configure.slurm.prologs.headnode.sh
        - 08.install.duc.headnode.sh
        - 33.install.cost.control.sh
        - 40.install.monitoring.headnode.sh
        - 50.install.capacity.reservation.pool.sh
        - 70.install.enroot.pyxis.sh
        - 88.install.preemption.headnode.sh
        - 90.install.service.automation.headnode.sh
      Script: s3://${S3_BUCKET}/1click-hpc/scripts/post.install.sh
  Iam:
    AdditionalIamPolicies:
      - Policy: arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      - Policy: arn:aws:iam::aws:policy/SecretsManagerReadWrite
      - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
      - Policy: arn:aws:iam::${AWS_ACCOUNT}:policy/${CLUSTER_NAME}-ODCR-Policy
      - Policy: arn:aws:iam::${AWS_ACCOUNT}:policy/pclusterTagsAndBudget # make sure this policy is created https://pcluster.cloud/02-tutorials/04-cost-tracking.html
      - Policy: arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
    S3Access:
      - BucketName: '*'
        EnableWriteAccess: true
  InstanceType: c5n.9xlarge
  Networking:
    ElasticIp: true
    SubnetId: ${HN_SUBNET_ID}
  Ssh:
    KeyName: ${KEY_PAIR}
  Imds:
    Secured: false
Image:
  Os: alinux2
DirectoryService:
  DomainName: dc=${DC0},dc=${DC1},dc=${DC2}
  DomainAddr: ldaps://${NLB_PUBLIC_DNS_NAME}
  PasswordSecretArn: ${SECRET_ARN}
  DomainReadOnlyUser: cn=ReadOnlyUser,ou=${OU},dc=${DC0},dc=${DC1},dc=${DC2}
  LdapTlsReqCert: never
  AdditionalSssdConfigs:
    debug_level: "0xFFF0"
    ldap_search_base: dc=research,dc=stability,dc=ai?subtree?(&(!(objectClass=computer))(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
    cache_credentials: False
    enumerate: True
    ldap_user_extra_attrs: "altSecurityIdentities"
    ldap_user_ssh_public_key: "altSecurityIdentities"

Region: ${AWS_REGION_NAME}
Scheduling:
  Scheduler: slurm
  SlurmSettings:
    ScaledownIdletime: 10
    EnableMemoryBasedScheduling: true
  SlurmQueues:
    - Name: gpu
      CapacityType: ONDEMAND
      ComputeSettings:
        LocalStorage:
          RootVolume:
            Size: 1024
            Encrypted: false
            VolumeType: gp3
            Iops: 5000
      ComputeResources:
        - Name: p4de-24xlarge
          DisableSimultaneousMultithreading: true
          Efa:
            Enabled: true
          InstanceType: p4de.24xlarge
          MaxCount: 88
          MinCount: 88
      CustomActions:
        OnNodeConfigured:
          Args:
            - 00.install.custom.packages.compute.sh
            - 02.activate.passwordless.sudo.compute.sh
            - 04.configure.disable.anacron.compute.sh
            - 33.install.cost.control.sh
            - 35.boost.gpu.clock.gpu.sh
            - 40.install.monitoring.gpu.sh
            - 43.allow.nvidia.debug.gpu.sh
            - 45.install.nccl.compute.sh
            - 70.install.enroot.pyxis.sh
            - 70.install.singularity.compute.sh
            - 80.fast.aws.cli.compute.sh
            - 90.install.service.automation.gpu.sh
          Script: s3://${S3_BUCKET}/1click-hpc/scripts/post.install.sh
      Iam:
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
          - Policy: arn:aws:iam::aws:policy/SecretsManagerReadWrite
          - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
          - Policy: arn:aws:iam::aws:policy/AmazonSSMFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
          - Policy: arn:aws:iam::aws:policy/AWSSupportAccess
          - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
          - Policy: arn:aws:iam::${AWS_ACCOUNT}:policy/pclusterTagsAndBudget #make sure this policy is created https://pcluster.cloud/02-tutorials/04-cost-tracking.html
        S3Access:
          - BucketName: '*'
            EnableWriteAccess: true
      Networking:
        PlacementGroup:
          Enabled: false
        SubnetIds:
          - ${SUBNET_ID}
        AssignPublicIp: ${USE_PUBLIC_IPS}
SharedStorage:
${FSX}
Tags:
  - Key: 1Click-HPC
    Value: 'true'
  - Key: 1Click-HPC-version
    Value: 'stability'
  - Key: map-migrated
    Value: ${MAP_MIGRATED}
  - Key: aws-parallelcluster-username
    Value: NA
  - Key: aws-parallelcluster-jobid
    Value: NA
  - Key: aws-parallelcluster-project
    Value: NA
Monitoring:
  Logs:
    CloudWatch:
      RetentionInDays: 60
DevSettings:
  Timeouts:
    HeadNodeBootstrapTimeout: 3600
    ComputeNodeBootstrapTimeout: 3600